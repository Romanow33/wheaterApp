{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nacho\\\\Desktop\\\\AppsByMe\\\\wheaterApp\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Nav from \"../components/Nav.jsx\";\nimport Cards from \"../components/Cards.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIKEY = process.env.APP_API_KEY;\nconst apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  console.log(APIKEY + \"  API\");\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${APIKEY}`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: recurso.main.temp_min,\n          max: recurso.main.temp_max,\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cities: cities,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nacho/Desktop/AppsByMe/wheaterApp/src/containers/App.js"],"names":["React","useState","Nav","Cards","APIKEY","process","env","APP_API_KEY","apiKey","App","cities","setCities","console","log","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA3B;AAEA,MAAMC,MAAM,GAAG,kCAAf;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,GAAG,OAArB;;AACA,WAASU,OAAT,CAAiBC,EAAjB,EAAqB;AACnBJ,IAAAA,SAAS,CAAEK,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAAjC,CAAhB,CAAT;AACD;;AACD,WAASI,QAAT,CAAkBC,MAAlB,EAA0B;AACxB;AACAC,IAAAA,KAAK,CACF,oDAAmDD,MAAO,UAAShB,MAAO,EADxE,CAAL,CAGGkB,IAHH,CAGSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAHf,EAIGF,IAJH,CAISG,OAAD,IAAa;AACjB,UAAIA,OAAO,CAACC,IAAR,KAAiBC,SAArB,EAAgC;AAC9B,cAAMP,MAAM,GAAG;AACbQ,UAAAA,GAAG,EAAEH,OAAO,CAACC,IAAR,CAAaG,QADL;AAEbC,UAAAA,GAAG,EAAEL,OAAO,CAACC,IAAR,CAAaK,QAFL;AAGbC,UAAAA,GAAG,EAAEP,OAAO,CAACQ,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;AAIbnB,UAAAA,EAAE,EAAEU,OAAO,CAACV,EAJC;AAKboB,UAAAA,IAAI,EAAEV,OAAO,CAACU,IAAR,CAAaC,KALN;AAMbC,UAAAA,IAAI,EAAEZ,OAAO,CAACC,IAAR,CAAaW,IANN;AAObC,UAAAA,IAAI,EAAEb,OAAO,CAACa,IAPD;AAQbL,UAAAA,OAAO,EAAER,OAAO,CAACQ,OAAR,CAAgB,CAAhB,EAAmBP,IARf;AASba,UAAAA,MAAM,EAAEd,OAAO,CAACc,MAAR,CAAeC,GATV;AAUbC,UAAAA,OAAO,EAAEhB,OAAO,CAACiB,KAAR,CAAcC,GAVV;AAWbC,UAAAA,QAAQ,EAAEnB,OAAO,CAACiB,KAAR,CAAcG;AAXX,SAAf;AAaAlC,QAAAA,SAAS,CAAEK,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeI,MAAf,CAAhB,CAAT;AACD,OAfD,MAeO;AACL0B,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,KAvBH;AAwBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAE3B;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAET,MAAf;AAAuB,MAAA,OAAO,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxCQL,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Nav from \"../components/Nav.jsx\";\r\nimport Cards from \"../components/Cards.jsx\";\r\n\r\nconst APIKEY = process.env.APP_API_KEY\r\n\r\nconst apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n  console.log(APIKEY + \"  API\")\r\n  function onClose(id) {\r\n    setCities((oldCities) => oldCities.filter((c) => c.id !== id));\r\n  }\r\n  function onSearch(ciudad) {\r\n    //Llamado a la API del clima\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${APIKEY}`\r\n    )\r\n      .then((r) => r.json())\r\n      .then((recurso) => {\r\n        if (recurso.main !== undefined) {\r\n          const ciudad = {\r\n            min: recurso.main.temp_min,\r\n            max: recurso.main.temp_max,\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon,\r\n          };\r\n          setCities((oldCities) => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav onSearch={onSearch} />\r\n      <Cards cities={cities} onClose={onClose} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}